-- This file is generated by tools/json2lua.js

local enum = require('ffxiv_enum')
local ffxiv_ipc_ensemble_ready_receive = Proto("ffxiv_ipc_ensemble_ready_receive", "FFXIV-IPC Ensemble Ready Receive")

local ensemble_ready_receive_fields = {
  bpm                = ProtoField.uint16("ffxiv_ipc_ensemble_ready_receive.bpm", "BPM", base.DEC),
  meter              = ProtoField.uint8("ffxiv_ipc_ensemble_ready_receive.meter", "meter", base.DEC),
  ensemble_assistant = ProtoField.uint8("ffxiv_ipc_ensemble_ready_receive.ensemble_assistant", "Ensemble Assistant", base.DEC, enum.reverse.ensemble_assistant),
}

ffxiv_ipc_ensemble_ready_receive.fields = ensemble_ready_receive_fields

function ffxiv_ipc_ensemble_ready_receive.dissector(tvbuf, pktinfo, root)
  local tree = root:add(ffxiv_ipc_ensemble_ready_receive, tvbuf)
  pktinfo.cols.info:set("Ensemble Ready Receive")

  local len = tvbuf:len()

  -- dissect the bpm field
  local bpm_tvbr = tvbuf:range(18, 1)
  local bpm_val  = bpm_tvbr:le_uint()
  tree:add_le(ensemble_ready_receive_fields.bpm, bpm_tvbr, bpm_val)

  -- dissect the meter field
  local meter_tvbr = tvbuf:range(19, 1)
  local meter_val  = meter_tvbr:le_uint()
  tree:add_le(ensemble_ready_receive_fields.meter, meter_tvbr, meter_val)

  -- dissect the ensemble_assistant field
  local ensemble_assistant_tvbr = tvbuf:range(20, 1)
  local ensemble_assistant_val  = ensemble_assistant_tvbr:le_uint()
  tree:add_le(ensemble_ready_receive_fields.ensemble_assistant, ensemble_assistant_tvbr, ensemble_assistant_val)

  return len
end