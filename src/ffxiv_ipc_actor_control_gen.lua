-- This file is generated by tools/json2lua.js

local db = require('ffxiv_db')
local enum = require('ffxiv_enum')
local label_data0_type = {
  [21] = "Status",
  [116] = "Fate",
}
local label_mode_type = {
  [300] = "Enabled",
}
local ffxiv_ipc_actor_control = Proto("ffxiv_ipc_actor_control", "FFXIV-IPC Actor Control")

local actor_control_fields = {
  type     = ProtoField.uint16("ffxiv_ipc_actor_control.type", "Type", base.DEC, enum.reverse.actor_control_type),
  unknown  = ProtoField.uint16("ffxiv_ipc_actor_control.unknown", "Unknown", base.DEC),
  data0    = ProtoField.uint32("ffxiv_ipc_actor_control.data0", "Data0", base.DEC),
  mode     = ProtoField.uint32("ffxiv_ipc_actor_control.mode", "Mode", base.DEC),
  skill_id = ProtoField.uint32("ffxiv_ipc_actor_control.skill_id", "SkillID", base.DEC, db.Action),
  param1   = ProtoField.uint32("ffxiv_ipc_actor_control.param1", "Param1", base.DEC),
  param2   = ProtoField.uint32("ffxiv_ipc_actor_control.param2", "Param2", base.DEC),
}

ffxiv_ipc_actor_control.fields = actor_control_fields

function ffxiv_ipc_actor_control.dissector(tvbuf, pktinfo, root)
  local tree = root:add(ffxiv_ipc_actor_control, tvbuf)
  pktinfo.cols.info:set("Actor Control")

  local len = tvbuf:len()

  -- dissect the type field
  local type_tvbr = tvbuf:range(0, 2)
  local type_val  = type_tvbr:le_uint()
  tree:add_le(actor_control_fields.type, type_tvbr, type_val)

  local type_display = ", Type: " .. (enum.reverse.actor_control_type[type_val] or "(unknown)")
  pktinfo.cols.info:append(type_display)
  tree:append_text(type_display)

  -- dissect the unknown field
  local unknown_tvbr = tvbuf:range(2, 2)
  local unknown_val  = unknown_tvbr:le_uint()
  tree:add_le(actor_control_fields.unknown, unknown_tvbr, unknown_val)

  -- dissect the data0 field
  local data0_tvbr = tvbuf:range(4, 4)
  local data0_val  = data0_tvbr:le_uint()
  local data0_label_key = "Data0"
  local data0_label_val = data0_val
  if type_val == 21 then
    data0_label_key = "Status"
    data0_label_val = (db.Status[data0_val] or "Unknown") .. " (" .. data0_val .. ")"
  elseif type_val == 116 then
    data0_label_key = "Fate"
    data0_label_val = (db.Fate[data0_val] or "Unknown") .. " (" .. data0_val .. ")"
  end
  tree:add_le(actor_control_fields.data0, data0_tvbr, data0_val, data0_label_key .. ": " .. data0_label_val)

  -- dissect the mode field
  local mode_tvbr = tvbuf:range(8, 4)
  local mode_val  = mode_tvbr:le_uint()
  local mode_label_key = "Mode"
  local mode_label_val = mode_val
  if type_val == 300 then
    mode_label_key = "Enabled"
  end
  tree:add_le(actor_control_fields.mode, mode_tvbr, mode_val, mode_label_key .. ": " .. mode_label_val)

  -- dissect the skill_id field
  local skill_id_tvbr = tvbuf:range(12, 4)
  local skill_id_val  = skill_id_tvbr:le_uint()
  tree:add_le(actor_control_fields.skill_id, skill_id_tvbr, skill_id_val)

  -- dissect the param1 field
  local param1_tvbr = tvbuf:range(16, 4)
  local param1_val  = param1_tvbr:le_uint()
  tree:add_le(actor_control_fields.param1, param1_tvbr, param1_val)

  -- dissect the param2 field
  local param2_tvbr = tvbuf:range(20, 4)
  local param2_val  = param2_tvbr:le_uint()
  tree:add_le(actor_control_fields.param2, param2_tvbr, param2_val)

  return len
end